{"version":3,"sources":["api/index.js","constants/actionTypes.js","actions/posts.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","images/memories.png","styles.js","App.js","reducers/index.js","reducers/posts.js","index.js"],"names":["url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","CREATE","UPDATE","DELETE","FETCH_ALL","LIKE","createPost","post","dispatch","a","newPost","data","type","payload","console","log","api","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","setCurrentId","classes","useStyles","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","_id","fontSize","tags","map","tag","gutterBottom","CardContent","component","message","CardActions","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","posts","useSelector","state","length","Grid","container","item","xs","sm","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","postData","setPostData","find","useEffect","handleSubmit","e","preventDefault","clear","Paper","autoComplete","noValidate","onSubmit","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","justify","reducers","combineReducers","action","filter","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0e76855.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n//url pointing to our backend rout which has all our posts\r\nconst url ='https://peppers-memories.herokuapp.com/post';\r\n\r\n// this will get our fetch. Add redux capabilities, all actions towards back end is via redux.\r\nexport const fetchPosts = () => axios.get(url); \r\nexport const createPost = (newPost) => axios.post(url, newPost); \r\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\r\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);","export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\nexport const LIKE = 'LIKE';\r\n\r\n","import * as api from '../api/index.js';\r\nimport { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\n// Action Creators\r\n// functions that return actions\r\n// redux thunk allows to specify another arrow function\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPosts();\r\n        dispatch({ type: FETCH_ALL , payload: data })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createPost(post);\r\n        dispatch({ type: CREATE , payload: data });\r\n    } catch (error) {\r\n        console.log(error);   \r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n        dispatch ({ type: UPDATE , payload: data })\r\n    } catch (error) {\r\n        console.log(error)\r\n        \r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id)\r\n        dispatch({ type: DELETE , payload: id })\r\n    } catch (error) {\r\n        console.log(error)\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.likePost(id);\r\n\r\n        dispatch({ type: LIKE , payload: data })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});","import React from 'react';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'; \r\nimport moment from 'moment';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { deletePost, likePost } from '../../../actions/posts';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Post = ({post, setCurrentId}) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title} />\r\n            <div className={classes.overlay}>\r\n                <Typography variant='h6'>{post.creator}</Typography>\r\n                <Typography variant='body2'>{moment(post.createdAt).fromNow()}</Typography>\r\n            </div>\r\n            <div className={classes.overlay2}>\r\n                <Button style={{color: 'white'}} size='small' onClick={()=>{setCurrentId(post._id)}}>\r\n                    <MoreHorizIcon fontSize='default' />\r\n                </Button>\r\n            </div>\r\n            <div className={classes.details}>\r\n            <Typography variant='body2' color='textSecondary'> {post.tags.map((tag)=> `#${tag} `)}</Typography>\r\n            </div>\r\n            <Typography className={classes.title} variant='h5' gutterBottom> {post.title} </Typography>  \r\n            <CardContent>\r\n                <Typography variant='body2' color='textSecondary' component='p'> {post.message} </Typography>        \r\n            </CardContent>\r\n            <CardActions className={classes.cardActions}>\r\n                <Button size='small' color='primary' onClick={()=> {dispatch(likePost(post._id))}}>\r\n                    <ThumbUpAltIcon fontSize='small' />&nbsp;Like:&nbsp;{post.likeCount}\r\n                </Button>\r\n                <Button size='small' color='primary' onClick={()=> {dispatch(deletePost(post._id))}}>\r\n                    <DeleteIcon fontSize='small' />\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n        );\r\n}\r\n\r\nexport default Post;\r\n\r\n\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Post from './Post/Post';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Posts = ({setCurrentId}) => {\r\n    const posts = useSelector((state)=> state.posts)\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        !posts.length ? \"Stay Tooned!\" : \r\n            <Grid className={classes.container} container alignItems='stretch' spacing={9}>\r\n                {posts.map((post) => (\r\n                    <Grid key={post._id} item xs={12} sm={5}>\r\n                        <Post post={post} setCurrentId={setCurrentId}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n\r\n    );\r\n}\r\n\r\nexport default Posts;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button , Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport useStyles from './styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\nconst Form = ({currentId, setCurrentId}) => {\r\n    \r\n    const [postData, setPostData] = useState({title: '', message: '', creator: '', tags: '', selectedFile: ''});\r\n    const classes = useStyles();\r\n    const post = useSelector((state)=> (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        if(post) setPostData(post);\r\n    }, [post])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if(currentId === 0) {\r\n            dispatch(createPost(postData));\r\n            clear();\r\n        } else {\r\n            dispatch(updatePost(currentId, postData));\r\n            clear();\r\n        }\r\n    }\r\n\r\n    const clear = () => {\r\n        setCurrentId(0);\r\n        setPostData({ creator: '', title:'', message: '', tags: '', selectedFile: '' });\r\n    }\r\n\r\n    return (\r\n        <Paper className = {classes.paper}>\r\n            <form autoComplete = \"off\" noValidate className={`${classes.root}, ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant='h6'>{currentId ? `Editing` : `Creating`} a Memory</Typography>\r\n                <TextField name='creator' variant='outlined' label='Creator' fullWidth value={postData.creator} onChange={(e)=>setPostData({ ...postData,  creator: e.target.value })}/>\r\n                <TextField name='title' variant='outlined' label='Title' fullWidth value={postData.title} onChange={(e)=>setPostData({ ...postData,  title: e.target.value })}/>\r\n                <TextField name='message' variant='outlined' label='Message' fullWidth value={postData.message} onChange={(e)=>setPostData({ ...postData,  message: e.target.value })}/>\r\n                <TextField name='tags' variant='outlined' label='Tags' fullWidth value={postData.tags} onChange={(e)=>setPostData({ ...postData,  tags: e.target.value.split(',') })}/>\r\n                <div className={classes.fileInput}>\r\n                    <FileBase type=\"file\" multiple={false} onDone={({base64})=>setPostData({ ...postData, selectedFile: base64 })} />\r\n                </div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color='primary' size='large' type='submit' fullWidth>Submit</Button>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color='secondary' size='small' onClick={clear} fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form;","export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  heading: {\r\n    color: 'rgba(0,183,255, 1)',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    mainContainer: {\r\n      flexDirection: 'column-reverse'\r\n    }\r\n  }\r\n}));","import React, { useEffect, useState } from 'react';\r\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getPosts } from './actions/posts';\r\n\r\nimport Posts from './components/Posts/Posts';\r\nimport Form from './components/Form/Form';\r\n\r\nimport memories from './images/memories.png';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [currentId, setCurrentId] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        dispatch(getPosts());\r\n    },[currentId, dispatch]);\r\n\r\n    return (\r\n        <Container maxWidth='lg'>\r\n            <AppBar className={classes.appBar} position = 'static' color='inherit'>\r\n                <Typography className={classes.heading} variant='h2' align='center'>Pepper's Memories</Typography>\r\n                <img className={classes.image} src={memories} alt='memories' height='60' />\r\n            </AppBar>\r\n            <Grow in>\r\n                <Container>\r\n                    <Grid className={classes.mainContainer} container justify='space-between' alignItems='stretch' spacing={3}>\r\n                        <Grid item xs={12} sm={7}>\r\n                            <Posts setCurrentId={setCurrentId}/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Form currentId={currentId} setCurrentId={setCurrentId}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Grow>\r\n        </Container>\r\n        );\r\n}\r\n\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport posts from './posts';\r\n\r\nexport const reducers = combineReducers({ posts });","import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nexport default (posts=[], action) => {\r\n    switch(action.type) {\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n        case CREATE:\r\n            return [...posts, action.payload];\r\n        case UPDATE:\r\n            return posts.map((post)=> post._id === action.payload._id ? action.payload : post);\r\n        case DELETE:\r\n            return posts.filter((post) => post._id !== action.payload);\r\n        case LIKE:\r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        default:\r\n            return posts;\r\n        \r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n// keep track of store, global state, allow access to global store from anywhere in the app.\nimport { Provider } from 'react-redux';\nimport  { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducers } from './reducers';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}